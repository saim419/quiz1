{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar APIdemo = function APIdemo() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    forecast = _useState4[0],\n    setForecast = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    latitude = _useState8[0],\n    setLatitude = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    longitude = _useState10[0],\n    setLongitude = _useState10[1];\n  var getWeather = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var url = \"https://api.weather.gov/points/\" + latitude + \",\" + longitude;\n        var response = yield fetch(url);\n        var json = yield response.json();\n        console.dir(json.properties.forecast);\n        var response2 = yield fetch(json.properties.forecast);\n        var json2 = yield response2.json();\n        var _forecast = json2.properties.periods[0].detailedForecast;\n        console.dir(_forecast);\n        setData(json);\n        setForecast(_forecast);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getWeather() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getWeather();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"API Demo\"\n    }), _jsx(TextInput, {\n      placeholder: \"Enter latitude\",\n      value: latitude,\n      onChangeText: function onChangeText(text) {\n        return setLatitude(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Enter longitude\",\n      value: longitude,\n      onChangeText: function onChangeText(text) {\n        return setLongitude(text);\n      }\n    }), _jsx(Button, {\n      title: \"Get Weather\",\n      onPress: getWeather\n    }), _jsx(Text, {\n      children: JSON.stringify(forecast)\n    })]\n  });\n};\nexport default APIdemo;","map":{"version":3,"names":["React","useState","useEffect","Text","FlatList","View","TextInput","Button","jsx","_jsx","jsxs","_jsxs","APIdemo","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","forecast","setForecast","_useState5","_useState6","loading","setLoading","_useState7","_useState8","latitude","setLatitude","_useState9","_useState10","longitude","setLongitude","getWeather","_ref","_asyncToGenerator","url","response","fetch","json","console","dir","properties","response2","json2","periods","detailedForecast","error","apply","arguments","children","placeholder","value","onChangeText","text","title","onPress","JSON","stringify"],"sources":["/Users/saimsiddiqui/Desktop/Test2/reactnative/code/AwesomeProject/components/WeatherDemo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, FlatList, View, TextInput, Button } from 'react-native';\n\nconst APIdemo = () => {\n  const [data, setData] = useState([]);\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n\n  const getWeather = async () => {\n    try {\n      const url = `https://api.weather.gov/points/${latitude},${longitude}`;\n      const response = await fetch(url);\n      const json = await response.json();\n      console.dir(json.properties.forecast);\n      const response2 = await fetch(json.properties.forecast);\n      const json2 = await response2.json();\n      const forecast = json2.properties.periods[0].detailedForecast;\n      console.dir(forecast);\n      setData(json);\n      setForecast(forecast);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  return (\n    <View>\n      <Text>API Demo</Text>\n\n      <TextInput\n        placeholder=\"Enter latitude\"\n        value={latitude}\n        onChangeText={text => setLatitude(text)}\n      />\n      <TextInput\n        placeholder=\"Enter longitude\"\n        value={longitude}\n        onChangeText={text => setLongitude(text)}\n      />\n      <Button title=\"Get Weather\" onPress={getWeather} />\n\n      <Text>{JSON.stringify(forecast)}</Text>\n    </View>\n  );\n};\n\nexport default APIdemo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}