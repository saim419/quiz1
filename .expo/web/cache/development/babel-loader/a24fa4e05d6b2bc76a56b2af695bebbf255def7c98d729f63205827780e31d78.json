{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Quiz2 = function Quiz2(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    x = _useState2[0],\n    setX = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    y = _useState4[0],\n    setY = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    z = _useState6[0],\n    setZ = _useState6[1];\n  var _useState7 = useState('0'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    distance = _useState8[0],\n    setDistance = _useState8[1];\n  var calculateDistance = function calculateDistance() {\n    var xVal = parseInt(x);\n    var yVal = parseInt(y);\n    var zVal = parseInt(z);\n    if (!isNaN(xVal) && !isNaN(yVal) && !isNaN(zVal)) {\n      var d = Math.sqrt(xVal * xVal + yVal * yVal + zVal * zVal);\n      setDistance(Math.floor(d).toString());\n    } else {\n      setDistance('Invalid input');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Distance of (X, Y, Z) from (0, 0, 0)\"\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Write the code for this app which calculates\"\n    }), _jsx(Text, {\n      style: styles.equation,\n      children: \"d = Math.sqrt(x * x + y * y + z * z)\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"X\",\n      onChangeText: function onChangeText(text) {\n        return setX(text);\n      },\n      value: x,\n      keyboardType: \"numeric\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Y\",\n      onChangeText: function onChangeText(text) {\n        return setY(text);\n      },\n      value: y,\n      keyboardType: \"numeric\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Z\",\n      onChangeText: function onChangeText(text) {\n        return setZ(text);\n      },\n      value: z,\n      keyboardType: \"numeric\"\n    }), _jsx(Button, {\n      onPress: calculateDistance,\n      title: \"Calculate Distance\"\n    }), _jsxs(Text, {\n      style: styles.result,\n      children: [\"Distance to (\", x, \", \", y, \", \", z, \") is d = \", distance]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ffffff'\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  subtitle: {\n    fontSize: 18,\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  equation: {\n    fontSize: 18,\n    marginBottom: 16,\n    textAlign: 'center',\n    fontStyle: 'italic'\n  },\n  input: {\n    width: '70%',\n    height: 40,\n    marginBottom: 8,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingHorizontal: 10\n  },\n  result: {\n    marginTop: 16,\n    textAlign: 'center'\n  }\n});\nexport default Quiz2;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","Quiz2","_ref","navigation","_useState","_useState2","_slicedToArray","x","setX","_useState3","_useState4","y","setY","_useState5","_useState6","z","setZ","_useState7","_useState8","distance","setDistance","calculateDistance","xVal","parseInt","yVal","zVal","isNaN","d","Math","sqrt","floor","toString","style","styles","container","children","title","subtitle","equation","input","placeholder","onChangeText","text","value","keyboardType","onPress","result","create","flex","padding","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","fontStyle","width","height","borderColor","borderWidth","paddingHorizontal","marginTop"],"sources":["/Users/saimsiddiqui/Desktop/Test2/reactnative/code/AwesomeProject/components/Quiz2.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\n\nconst Quiz2 = ({ navigation }) => {\n  const [x, setX] = useState('');\n  const [y, setY] = useState('');\n  const [z, setZ] = useState('');\n  const [distance, setDistance] = useState('0');\n\n  const calculateDistance = () => {\n    const xVal = parseInt(x);\n    const yVal = parseInt(y);\n    const zVal = parseInt(z);\n\n    if (!isNaN(xVal) && !isNaN(yVal) && !isNaN(zVal)) {\n      const d = Math.sqrt(xVal * xVal + yVal * yVal + zVal * zVal);\n      setDistance(Math.floor(d).toString());\n    } else {\n      setDistance('Invalid input');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Distance of (X, Y, Z) from (0, 0, 0)</Text>\n      <Text style={styles.subtitle}>Write the code for this app which calculates</Text>\n      <Text style={styles.equation}>d = Math.sqrt(x * x + y * y + z * z)</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"X\"\n        onChangeText={(text) => setX(text)}\n        value={x}\n        keyboardType=\"numeric\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Y\"\n        onChangeText={(text) => setY(text)}\n        value={y}\n        keyboardType=\"numeric\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Z\"\n        onChangeText={(text) => setZ(text)}\n        value={z}\n        keyboardType=\"numeric\"\n      />\n      <Button onPress={calculateDistance} title=\"Calculate Distance\" />\n      <Text style={styles.result}>\n        Distance to ({x}, {y}, {z}) is d = {distance}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ffffff',\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 18,\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  equation: {\n    fontSize: 18,\n    marginBottom: 16,\n    textAlign: 'center',\n    fontStyle: 'italic',\n  },\n  input: {\n    width: '70%',\n    height: 40,\n    marginBottom: 8,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingHorizontal: 10,\n  },\n  result: {\n    marginTop: 16,\n    textAlign: 'center',\n  },\n});\n\nexport default Quiz2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}