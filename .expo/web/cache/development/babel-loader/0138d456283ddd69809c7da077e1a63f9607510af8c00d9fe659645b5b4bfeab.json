{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Quiz2 = function Quiz2(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    x = _useState2[0],\n    setX = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    y = _useState4[0],\n    setY = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    z = _useState6[0],\n    setZ = _useState6[1];\n  var _useState7 = useState('0'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    distance = _useState8[0],\n    setDistance = _useState8[1];\n  var calculateDistance = function calculateDistance() {\n    var xVal = parseInt(x);\n    var yVal = parseInt(y);\n    var zVal = parseInt(z);\n    if (!isNaN(xVal) && !isNaN(yVal) && !isNaN(zVal)) {\n      var d = Math.sqrt(xVal * xVal + yVal * yVal + zVal * zVal);\n      setDistance(Math.floor(d).toString());\n    } else {\n      setDistance('Invalid input');\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        marginBottom: 16\n      },\n      children: \"Distance of (X,Y,Z) from (0,0,0)\"\n    }), _jsx(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"Write the code for this app which calculates\"\n    }), _jsx(Text, {\n      style: {\n        fontSize: 24,\n        marginBottom: 16\n      },\n      children: \"d = Math.sqrt(x*x+y*y+z*z)\"\n    }), _jsx(TextInput, {\n      style: {\n        marginBottom: 8\n      },\n      placeholder: \"X\",\n      onChangeText: function onChangeText(text) {\n        return setX(text);\n      },\n      value: x,\n      keyboardType: \"numeric\"\n    }), _jsx(TextInput, {\n      style: {\n        marginBottom: 8\n      },\n      placeholder: \"Y\",\n      onChangeText: function onChangeText(text) {\n        return setY(text);\n      },\n      value: y,\n      keyboardType: \"numeric\"\n    }), _jsx(TextInput, {\n      style: {\n        marginBottom: 16\n      },\n      placeholder: \"Z\",\n      onChangeText: function onChangeText(text) {\n        return setZ(text);\n      },\n      value: z,\n      keyboardType: \"numeric\"\n    }), _jsx(View, {\n      style: {\n        width: '50%'\n      },\n      children: _jsx(Button, {\n        onPress: calculateDistance,\n        title: \"Calculate Distance\"\n      })\n    }), _jsxs(Text, {\n      style: {\n        marginTop: 16\n      },\n      children: [\"Distance to (\", x, \", \", y, \", \", z, \") is d = \", distance]\n    })]\n  });\n};\nexport default Quiz2;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","jsx","_jsx","jsxs","_jsxs","Quiz2","_ref","navigation","_useState","_useState2","_slicedToArray","x","setX","_useState3","_useState4","y","setY","_useState5","_useState6","z","setZ","_useState7","_useState8","distance","setDistance","calculateDistance","xVal","parseInt","yVal","zVal","isNaN","d","Math","sqrt","floor","toString","style","flex","padding","children","fontSize","fontWeight","marginBottom","placeholder","onChangeText","text","value","keyboardType","width","onPress","title","marginTop"],"sources":["/Users/saimsiddiqui/Desktop/Test2/reactnative/code/AwesomeProject/components/Quiz2.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Button, Text } from 'react-native';\n\nconst Quiz2 = ({ navigation }) => {\n    const [x, setX] = useState('');\n    const [y, setY] = useState('');\n    const [z, setZ] = useState('');\n    const [distance, setDistance] = useState('0');\n\n    const calculateDistance = () => {\n        const xVal = parseInt(x);\n        const yVal = parseInt(y);\n        const zVal = parseInt(z);\n\n        if (!isNaN(xVal) && !isNaN(yVal) && !isNaN(zVal)) {\n            const d = Math.sqrt(xVal * xVal + yVal * yVal + zVal * zVal);\n            setDistance(Math.floor(d).toString());\n        } else {\n            setDistance('Invalid input');\n        }\n    };\n\n\n    return (\n        <View style={{ flex: 1, padding: 16 }}>\n            <Text style={{ fontSize: 25, fontWeight: 'bold', marginBottom: 16 }}>\n                Distance of (X,Y,Z) from (0,0,0)\n            </Text>\n            <Text style={{ fontSize: 24, marginBottom: 16 }}>\n                Write the code for this app which calculates\n            </Text>\n            <Text style={{ fontSize: 24, marginBottom: 16 }}>\n                d = Math.sqrt(x*x+y*y+z*z)\n            </Text>\n            <TextInput\n                style={{ marginBottom: 8 }}\n                placeholder=\"X\"\n                onChangeText={(text) => setX(text)}\n                value={x}\n                keyboardType=\"numeric\"\n            />\n            <TextInput\n                style={{ marginBottom: 8 }}\n                placeholder=\"Y\"\n                onChangeText={(text) => setY(text)}\n                value={y}\n                keyboardType=\"numeric\"\n            />\n            <TextInput\n                style={{ marginBottom: 16 }}\n                placeholder=\"Z\"\n                onChangeText={(text) => setZ(text)}\n                value={z}\n                keyboardType=\"numeric\"\n            />\n            <View style={{ width: '50%' }}>\n                <Button onPress={calculateDistance} title=\"Calculate Distance\" />\n            </View>\n            <Text style={{ marginTop: 16 }}>\n                Distance to ({x}, {y}, {z}) is d = {distance}\n            </Text>\n        </View>\n    );\n};\n\nexport default Quiz2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}