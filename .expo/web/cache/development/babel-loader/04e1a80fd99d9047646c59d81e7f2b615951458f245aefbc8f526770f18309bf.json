{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Quiz2 = function Quiz2() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    x1 = _useState2[0],\n    setX1 = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    y1 = _useState4[0],\n    setY1 = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    x2 = _useState6[0],\n    setX2 = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    y2 = _useState8[0],\n    setY2 = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    distance = _useState10[0],\n    setDistance = _useState10[1];\n  var calculateDistance = function calculateDistance() {\n    var point1 = {\n      x: parseFloat(x1),\n      y: parseFloat(y1)\n    };\n    var point2 = {\n      x: parseFloat(x2),\n      y: parseFloat(y2)\n    };\n    var dx = point2.x - point1.x;\n    var dy = point2.y - point1.y;\n    var calculatedDistance = Math.sqrt(dx * dx + dy * dy);\n    setDistance(calculatedDistance.toFixed(2));\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [_jsx(Title, {}), _jsx(Text, {\n      children: \"Enter the coordinates:\"\n    }), _jsx(TextInput, {\n      style: {\n        width: 200,\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 10\n      },\n      placeholder: \"x1\",\n      value: x1,\n      onChangeText: function onChangeText(text) {\n        return setX1(text);\n      },\n      keyboardType: \"numeric\"\n    }), _jsx(TextInput, {\n      style: {\n        width: 200,\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 10\n      },\n      placeholder: \"y1\",\n      value: y1,\n      onChangeText: function onChangeText(text) {\n        return setY1(text);\n      },\n      keyboardType: \"numeric\"\n    }), _jsx(TextInput, {\n      style: {\n        width: 200,\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 10\n      },\n      placeholder: \"x2\",\n      value: x2,\n      onChangeText: function onChangeText(text) {\n        return setX2(text);\n      },\n      keyboardType: \"numeric\"\n    }), _jsx(TextInput, {\n      style: {\n        width: 200,\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 10\n      },\n      placeholder: \"y2\",\n      value: y2,\n      onChangeText: function onChangeText(text) {\n        return setY2(text);\n      },\n      keyboardType: \"numeric\"\n    }), _jsx(Button, {\n      title: \"Calculate Distance\",\n      onPress: calculateDistance\n    }), distance && _jsxs(Text, {\n      children: [\"Distance: \", distance]\n    })]\n  });\n};\nexport default Quiz2;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","jsx","_jsx","jsxs","_jsxs","Quiz2","_useState","_useState2","_slicedToArray","x1","setX1","_useState3","_useState4","y1","setY1","_useState5","_useState6","x2","setX2","_useState7","_useState8","y2","setY2","_useState9","_useState10","distance","setDistance","calculateDistance","point1","x","parseFloat","y","point2","dx","dy","calculatedDistance","Math","sqrt","toFixed","style","flex","flexDirection","alignItems","children","Title","width","height","borderColor","borderWidth","marginBottom","placeholder","value","onChangeText","text","keyboardType","title","onPress"],"sources":["/Users/saimsiddiqui/Desktop/Test2/reactnative/code/AwesomeProject/components/Quiz2.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button } from 'react-native';\n\nconst Quiz2 = () => {\n    const [x1, setX1] = useState('');\n    const [y1, setY1] = useState('');\n    const [x2, setX2] = useState('');\n    const [y2, setY2] = useState('');\n    const [distance, setDistance] = useState(null);\n\n    const calculateDistance = () => {\n        const point1 = { x: parseFloat(x1), y: parseFloat(y1) };\n        const point2 = { x: parseFloat(x2), y: parseFloat(y2) };\n\n        const dx = point2.x - point1.x;\n        const dy = point2.y - point1.y;\n\n        const calculatedDistance = Math.sqrt(dx * dx + dy * dy);\n        setDistance(calculatedDistance.toFixed(2));\n    };\n\n    return (\n        <View style={{ flex: 1, flexDirection: 'column', alignItems: 'center' }}>\n            <Title></Title>\n            <Text>Enter the coordinates:</Text>\n            <TextInput\n                style={{ width: 200, height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\n                placeholder=\"x1\"\n                value={x1}\n                onChangeText={text => setX1(text)}\n                keyboardType=\"numeric\"\n            />\n            <TextInput\n                style={{ width: 200, height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\n                placeholder=\"y1\"\n                value={y1}\n                onChangeText={text => setY1(text)}\n                keyboardType=\"numeric\"\n            />\n            <TextInput\n                style={{ width: 200, height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\n                placeholder=\"x2\"\n                value={x2}\n                onChangeText={text => setX2(text)}\n                keyboardType=\"numeric\"\n            />\n            <TextInput\n                style={{ width: 200, height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 10 }}\n                placeholder=\"y2\"\n                value={y2}\n                onChangeText={text => setY2(text)}\n                keyboardType=\"numeric\"\n            />\n            <Button title=\"Calculate Distance\" onPress={calculateDistance} />\n            {distance && <Text>Distance: {distance}</Text>}\n        </View>\n    );\n};\n\nexport default Quiz2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}